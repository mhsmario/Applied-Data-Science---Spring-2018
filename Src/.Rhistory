all$BsmtFinType1[is.na(all$BsmtFinType1)] <- 'No Basement'
all$BsmtFinType1<-as.integer(revalue(all$BsmtFinType1, Qualities))
table(all$BsmtFinType1)
table(all$BsmtExposure)
table(all$BsmtFinType1)
all$BsmtQual[is.na(all$BsmtQual)] <- 'No Basement'
all$BsmtQual<-as.integer(revalue(all$BsmtQual, Qualities))
table(all$BsmtQual)
all$BsmtExposure[is.na(all$BsmtExposure)] <- 'No Basement'
all$BsmtExposure<-as.integer(revalue(all$BsmtExposure, Qualities))
table(all$BsmtExposure)
all$BsmtFinType1[is.na(all$BsmtFinType1)] <- 'No Basement'
all$BsmtFinType1<-as.integer(revalue(all$BsmtFinType1, Qualities))
table(all$BsmtFinType1)
all$BsmtFinType2[is.na(all$BsmtFinType2)] <- 'No Basement'
all$BsmtFinType2<-as.integer(revalue(all$BsmtFinType2, Qualities))
table(all$BsmtFinType2)
all$BsmtUnfSF[is.na(all$BsmtUnfSF)] <- 'No Basement'
all$BsmtUnfSF<-as.integer(revalue(all$BsmtUnfSF, Qualities))
table(all$BsmtUnfSF)
all$BsmtFinSF1[is.na(all$BsmtFinSF1)] <- 'No Basement'
all$BsmtFinSF1<-as.integer(revalue(all$BsmtFinSF1, Qualities))
table(all$BsmtFinSF1)
all$BsmtFinSF2[is.na(all$BsmtFinSF2)] <- 'No Basement'
all$BsmtFinSF2<-as.integer(revalue(all$BsmtFinSF2, Qualities))
table(all$BsmtFinSF2)
table(all$BsmtFinSF2)
all_numVar <- all.minus.nas[, numericVars]
numericVars <- which(sapply(all.minus.nas, is.numeric)) #index vector numeric variables
factorVars <- which(sapply(all.minus.nas, is.factor)) #index vector factor variables
all_numVar <- all.minus.nas[, numericVars]
cor_numVar <- cor(all_numVar, use="pairwise.complete.obs") #correlations of all numeric variables
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(cor_numVar[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.5)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt", tl.cex = 0.7,cl.cex = .7, number.cex=.7)
all_numVar <- all[, numericVars]
cor_numVar <- cor(all_numVar, use="pairwise.complete.obs") #correlations of all numeric variables
all$Id <- rownames(all)
numericVars <- which(sapply(all, is.numeric))
numericVarNames <- names(numericVars)
length(numericVars)
all_numVar <- all[, numericVars]
cor_numVar <- cor(all_numVar, use="pairwise.complete.obs") #correlations of all numeric variables
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(cor_numVar[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.5)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt")
View(all.minus.nas)
drop.na.columns <- c( "MasVnrType","LotFrontage")
all.minus.nas <- all[ , !(names(all) %in% drop.na.columns)]
all$Alley <- as.factor(all$Alley)
all$Alley[is.na(all$Alley)] <- 'No Alley'
table(all$Alley)
all$Alley[is.na(all$Alley)] <- 'No Alley'
all$Alley <- as.factor(all$Alley)
table(all$Alley)
all$MiscFeature[is.na(all$MiscFeature)] <- 'No Feature'
table(all$MiscFeature)
all$PoolQC[is.na(all$PoolQC)] <- 'No Pool'
str(PoolQC)
str('PoolQC')
all$PoolQC[is.na(all$PoolQC)] <- 'No Pool'
is.numeric(all$PoolQC)
is.factor(all$PoolQC)
is.character(all$PoolQC)
is.character(all$MiscFeature)
all$PoolQC[is.na(all$PoolQC)] <- 'No Pool'
str(all$MiscFeature)
all$MiscFeature[is.na(all$MiscFeature)] <- 'No Feature'
table(all$MiscFeature)
table(all$PoolQC)
table(all$Alley)
all$Alley[is.na(all$Alley)] <- 'No Alley'
all$Alley <- as.factor(all$Alley)
table(all$Alley)
is.character(all$Alley)
all$FireplaceQu[is.na(all$FireplaceQu)] <- 'No Fireplace'
all$FireplaceQu<-as.integer(revalue(all$FireplaceQu, Qualities))
table(all$FireplaceQu)
is.character(FireplaceQu)
is.character(all$FireplaceQu)
is.integer(all$FireplaceQu)
knitr::opts_chunk$set(echo = TRUE)
##Libraries
##If not working on your own machine use this code to speed up the setup:
#install.packages(c("corrplot", "shiny", "dplyr", "ggplot2", "e1071", "glmnet", "mice", "lattice", "VIM", "stargazer", "RColorBrewer", "ggfortify", "gam", "caret", "flam", "bartMachine", "tree", "ISLR", "ggfortify", "purr", "tidyr", "RColorBrewer", "readr"))
library(glmnet)
library(purrr)
library(tidyr)
library(readr)
library(corrplot)
library(shiny)
library(dplyr)
library(ggplot2)
library(e1071)
library(glmnet)
library(mice)
library(lattice)
library(VIM)
library(caret)
library(stargazer)
library(gam)
library(flam)
#options(java.parameters = "-Xmx5g") #useful when bartmachine breaks because of Java on IOS
library(bartMachine)
library(tree)
library(ISLR)
library(RColorBrewer)
library(ggfortify)
library(scales)
library(stargazer)
library(rsconnect)
library(knitr)
library(gridExtra)
library(scales)
library(Rmisc)
library(ggrepel)
library(randomForest)
library(psych)
train <- read.csv('/Users/lizhizicui/Desktop/Final-Project---Applied-Data-Science/Data/Raw/train.csv')
test <- read.csv('/Users/lizhizicui/Desktop/Final-Project---Applied-Data-Science/Data/Raw/test.csv')
test$SalePrice <- NA
all <- rbind(train,test)
# summary(train)
# summary(test)
hist(train$SalePrice, breaks=seq(30000, 760000, 500),prob=TRUE )
lines(density(train$SalePrice), col="blue", lwd=2)
lines(density(train$SalePrice, adjust=2), lty="dotted")
summary(train$SalePrice)
# SalePrice does not have a standard normal distribution, it is right skewed
# Log the SalePrice, the distribution of log(SalePrice) looks like a normal distribution
train$log_saleprice <- log(train$SalePrice)
train$log_saleprice
hist(train$log_saleprice, breaks=seq(10, 14, 0.025),prob=TRUE )
lines(density(train$log_saleprice), col="blue", lwd=2)
summary(train$SalePrice)
# summary(train)
# summary(test)
hist(train$SalePrice, breaks=seq(30000, 760000, 500),prob=TRUE )
lines(density(train$SalePrice), col="blue", lwd=2)
lines(density(train$SalePrice, adjust=2), lty="dotted")
summary(train$SalePrice)
# SalePrice does not have a standard normal distribution, it is right skewed
# Log the SalePrice, the distribution of log(SalePrice) looks like a normal distribution
train$log_saleprice <- log(train$SalePrice)
hist(train$log_saleprice, breaks=seq(10, 14, 0.025),prob=TRUE )
lines(density(train$log_saleprice), col="blue", lwd=2)
all$Id <- rownames(all)
numericVars <- which(sapply(all, is.numeric))
numericVarNames <- names(numericVars)
length(numericVars)
all_numVar <- all[, numericVars]
cor_numVar <- cor(all_numVar, use="pairwise.complete.obs") #correlations of all numeric variables
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(cor_numVar[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.5)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt")
qt <- train %>% keep(is.numeric)
ql <- train %>% keep(is.factor)
qtc <- na.omit(qt)
### Shiny uses only numerical variables.
shinyApp(
ui = fillPage(
fillCol(flex = c(NA, 1),
inputPanel(
selectInput("xcol", label = "X-axis:",
names(qtc))
),
plotOutput("plot", height = "100%")
)
),
server = function(input, output) {
output$plot = renderPlot( {
par(mfrow=c(1,1))
plot(density(qtc[,input$xcol]), main="Distribution of Quantitative variables", sub=paste("Skewness:", round(e1071::skewness(qtc[,input$xcol]), 2)))
polygon(density(qtc[,input$xcol]), col="light blue") }
)},
options = list(height = 700)
)
ggplot(data=all[!is.na(all$SalePrice),], aes(x=factor(OverallQual), y=SalePrice))+
geom_boxplot() + labs(x='Overall Quality') +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
ggplot(data=all[!is.na(all$SalePrice),], aes(x=GrLivArea, y=SalePrice))+
geom_point(col='black') + geom_smooth(method = "lm", se=FALSE, color="blue", aes(group=1)) +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
outlier1 <- all%>% filter(GrLivArea > 4500)
outlier1$Id
all[c(524, 1299, 2550), c('SalePrice', 'GrLivArea', 'OverallQual')]
summary(all$GarageCars)
ggplot(data=all[!is.na(all$SalePrice),], aes(x=factor(GarageCars), y=SalePrice))+
geom_boxplot() + labs(x='Size of Garage/car') +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
outlier2 <- all %>%
filter(GarageCars == 3)%>%
filter(SalePrice > 700000)
outlier2$Id
all[c(524, 1299, 692, 1183), c('SalePrice', 'GrLivArea', 'OverallQual','GarageCars')]
na_count <-sapply(train, function(y) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)
# maping_nas <- aggr(train, plot = FALSE, col = c('navyblue','red'), numbers = TRUE, sortVars = TRUE, labels = names(train), prop = FALSE)
#
# sumnas <- as.matrix(summary(train))
#
# plot_nas <- aggr(train, plot = TRUE, col =  c('navyblue','lightblue'), numbers = TRUE, sortVars = TRUE, labels = names(train), cex.axis = .5, gap = 1, ylab = c("Histogram of missing data","Pattern"), prop = TRUE, digits = "2")
is.factor(all$PoolQC)
is.factor(all$Alley)
all$Alley[is.na(all$Alley)] <- 'No Alley'
all$PoolQC[is.na(all$PoolQC)] <- 'No Pool'
all$PoolQC[is.na(all$PoolQC)] <- 'No Pool'
all <- rbind(train,test,stringsAsFactors = FALSE)
train <- read.csv('/Users/lizhizicui/Desktop/Final-Project---Applied-Data-Science/Data/Raw/train.csv')
test <- read.csv('/Users/lizhizicui/Desktop/Final-Project---Applied-Data-Science/Data/Raw/test.csv')
test$SalePrice <- NA
all <- rbind(train,test,stringsAsFactors = FALSE)
# summary(train)
# summary(test)
hist(train$SalePrice, breaks=seq(30000, 760000, 500),prob=TRUE )
lines(density(train$SalePrice), col="blue", lwd=2)
lines(density(train$SalePrice, adjust=2), lty="dotted")
summary(train$SalePrice)
# SalePrice does not have a standard normal distribution, it is right skewed
# Log the SalePrice, the distribution of log(SalePrice) looks like a normal distribution
train$log_saleprice <- log(train$SalePrice)
hist(train$log_saleprice, breaks=seq(10, 14, 0.025),prob=TRUE )
lines(density(train$log_saleprice), col="blue", lwd=2)
all$Id <- rownames(all)
numericVars <- which(sapply(all, is.numeric))
numericVarNames <- names(numericVars)
length(numericVars)
all_numVar <- all[, numericVars]
cor_numVar <- cor(all_numVar, use="pairwise.complete.obs") #correlations of all numeric variables
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(cor_numVar[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.5)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt")
ggplot(data=all[!is.na(all$SalePrice),], aes(x=factor(OverallQual), y=SalePrice))+
geom_boxplot() + labs(x='Overall Quality') +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
ggplot(data=all[!is.na(all$SalePrice),], aes(x=GrLivArea, y=SalePrice))+
geom_point(col='black') + geom_smooth(method = "lm", se=FALSE, color="blue", aes(group=1)) +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
outlier1 <- all%>% filter(GrLivArea > 4500)
outlier1$Id
all[c(524, 1299, 2550), c('SalePrice', 'GrLivArea', 'OverallQual')]
summary(all$GarageCars)
ggplot(data=all[!is.na(all$SalePrice),], aes(x=factor(GarageCars), y=SalePrice))+
geom_boxplot() + labs(x='Size of Garage/car') +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
outlier2 <- all %>%
filter(GarageCars == 3)%>%
filter(SalePrice > 700000)
outlier2$Id
all[c(524, 1299, 692, 1183), c('SalePrice', 'GrLivArea', 'OverallQual','GarageCars')]
na_count <-sapply(train, function(y) sum(length(which(is.na(y)))))
na_count <- data.frame(na_count)
# maping_nas <- aggr(train, plot = FALSE, col = c('navyblue','red'), numbers = TRUE, sortVars = TRUE, labels = names(train), prop = FALSE)
#
# sumnas <- as.matrix(summary(train))
#
# plot_nas <- aggr(train, plot = TRUE, col =  c('navyblue','lightblue'), numbers = TRUE, sortVars = TRUE, labels = names(train), cex.axis = .5, gap = 1, ylab = c("Histogram of missing data","Pattern"), prop = TRUE, digits = "2")
all$PoolQC[is.na(all$PoolQC)] <- 'No Pool'
table(all$PoolQC)
levels(all$PoolQC)
levels(all$PoolQC) = c("Ex", "Fa", "Gd", "Po", "TA", "None")
all$PoolQC[is.na(all$PoolQC)] <- 'None'
Qualities <- c('None' = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC<-as.integer(revalue(all$PoolQC, Qualities))
table(all$PoolQC)
levels(all$PoolQC)
levels(all$PoolQC) = c("Ex", "Fa", "Gd", "Po", "TA", "None")
all$PoolQC[is.na(all$PoolQC)] <- 'None'
Qualities <- c('None' = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC<-as.integer(revalue(all$PoolQC, Qualities))
table(all$PoolQC)
all$PoolQC[is.na(all$PoolQC)] <- "None"
Qualities <- c('None' = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
Qualities <- c("None" = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC<-as.integer(revalue(all$PoolQC, Qualities))
table(all$PoolQC)
all$PoolQC[is.na(all$PoolQC)] <- 0
all$PoolQC[is.na(all$PoolQC)] <- 0
Qualities <- c('Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC<-as.integer(revalue(all$PoolQC, Qualities))
all$PoolQC[is.na(all$PoolQC)] <- 0
Qualities <- c(0 = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC[is.na(all$PoolQC)] <- '0'
Qualities <- c('0' = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC<-as.integer(revalue(all$PoolQC, Qualities))
table(all$PoolQC)
all$PoolQC[is.na(all$PoolQC)] <- 'None'
Qualities <- c('None' = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC<-as.integer(revalue(all$PoolQC, Qualities))
table(all$PoolQC)
train <- read.csv('/Users/lizhizicui/Desktop/Final-Project---Applied-Data-Science/Data/Raw/train.csv')
test <- read.csv('/Users/lizhizicui/Desktop/Final-Project---Applied-Data-Science/Data/Raw/test.csv')
test$SalePrice <- NA
all <- rbind(train,test,stringsAsFactors = FALSE)
all$PoolQC[is.na(all$PoolQC)] <- 'None'
all$PoolQC[is.na(all$PoolQC)] <- 'No Pool'
Qualities <- c('None' = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC<-as.integer(revalue(all$PoolQC, Qualities))
table(all$PoolQC)
levels(all$PoolQC)
all$MiscFeature[is.na(all$MiscFeature)] <- 'No Feature'
table(all$MiscFeature)
all$Alley[is.na(all$Alley)] <- 'No Alley'
all$Alley <- as.factor(all$Alley)
table(all$Alley)
all$Fence[is.na(all$Fence)] <- 'No Fence'
table(all$Fence)
all$FireplaceQu[is.na(all$FireplaceQu)] <- 'No Fireplace'
all$FireplaceQu<-as.integer(revalue(all$FireplaceQu, Qualities))
table(all$FireplaceQu)
#GarageYrBlt/GarageFinish/GarageCars/GarageArea/GarageQual/GarageCond
all$GarageType[is.na(all$GarageType)] <- 'No Garage'
all$GarageType <- as.factor(all$GarageType)
table(all$GarageType)
all$GarageYrBlt[is.na(all$GarageYrBlt)] <- 'No Garage'
all$GarageYrBlt <- as.factor(all$GarageYrBlt)
table(all$GarageYrBlt)
all$GarageFinish[is.na(all$GarageFinish)] <- 'No Garage'
all$GarageFinish <- as.factor(all$GarageFinish)
table(all$GarageFinish)
all$GarageCars[is.na(all$GarageCars)] <- 'No Garage'
all$GarageCars <- as.factor(all$GarageCars)
table(all$GarageCars)
all$GarageArea[is.na(all$GarageArea)] <- 'No Garage'
all$GarageArea <- as.factor(all$GarageArea)
table(all$GarageArea)
all$GarageQual[is.na(all$GarageQual)] <- 'No Garage'
all$GarageQual <- as.factor(all$GarageQual)
table(all$GarageQual)
all$GarageCond[is.na(all$GarageCond)] <- 'No Garage'
all$GarageCond <- as.factor(all$GarageCond)
table(all$GarageCond)
#BsmtExposure: Refers to walkout or garden level walls (**smae for BsmtFinType1/BsmtFinSF1/BsmtFinType2/BsmtFinSF2/BsmtUnfSF/BsmtQual)
all$BsmtQual[is.na(all$BsmtQual)] <- 'No Basement'
all$BsmtQual<-as.integer(revalue(all$BsmtQual, Qualities))
table(all$BsmtQual)
all$BsmtExposure[is.na(all$BsmtExposure)] <- 'No Basement'
all$BsmtExposure<-as.integer(revalue(all$BsmtExposure, Qualities))
table(all$BsmtExposure)
all$BsmtFinType1[is.na(all$BsmtFinType1)] <- 'No Basement'
all$BsmtFinType1<-as.integer(revalue(all$BsmtFinType1, Qualities))
table(all$BsmtFinType1)
all$BsmtFinType2[is.na(all$BsmtFinType2)] <- 'No Basement'
all$BsmtFinType2<-as.integer(revalue(all$BsmtFinType2, Qualities))
table(all$BsmtFinType2)
all$BsmtUnfSF[is.na(all$BsmtUnfSF)] <- 'No Basement'
all$BsmtUnfSF<-as.integer(revalue(all$BsmtUnfSF, Qualities))
table(all$BsmtUnfSF)
all$BsmtFinSF1[is.na(all$BsmtFinSF1)] <- 'No Basement'
all$BsmtFinSF1<-as.integer(revalue(all$BsmtFinSF1, Qualities))
table(all$BsmtFinSF1)
all$BsmtFinSF2[is.na(all$BsmtFinSF2)] <- 'No Basement'
all$BsmtFinSF2<-as.integer(revalue(all$BsmtFinSF2, Qualities))
table(all$BsmtFinSF2)
drop.na.columns <- c( "MasVnrType","LotFrontage")
all.minus.nas <- all[ , !(names(all) %in% drop.na.columns)]
numericVars <- which(sapply(all.minus.nas, is.numeric))
factorVars <- which(sapply(all.minus.nas, is.factor))
all_numVar <- all.minus.nas[, numericVars]
cor_numVar <- cor(all_numVar, use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(cor_numVar[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.5)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt", tl.cex = 0.7,cl.cex = .7, number.cex=.7)
set.seed(123)
quick_RF <- randomForest(x=all.minus.nas[1:1460,-1], y=all.minus.nas$SalePrice[1:1461], ntree=100,importance=TRUE)
set.seed(123)
quick_RF <- randomForest(x=all.minus.nas[1:1461,-1], y=all.minus.nas$SalePrice[1:1461], ntree=100,importance=TRUE)
all$PoolQC[is.na(all$PoolQC)] <- 'No Pool'
Qualities <- c('None' = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC<-as.integer(revalue(all$PoolQC, Qualities))
table(all$PoolQC)
levels(all$PoolQC)
all$PoolQC[is.na(all$PoolQC)] <- 'No Pool'
Qualities <- c('None' = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC<-as.integer(revalue(all$PoolQC, Qualities))
table(all$PoolQC)
View(all)
all$PoolQC <- addNA(all$PoolQC)
levels(all$PoolQC) <- c(levels(all$PoolQC), 'None')
all$PoolQC[is.na(all$PoolQC)] <- 'No Pool'
Qualities <- c('None' = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC<-as.integer(revalue(all$PoolQC, Qualities))
all$PoolQC <- addNA(all$PoolQC)
levels(all$PoolQC) <- c(levels(all$PoolQC), 'None')
Qualities <- c('None' = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC<-as.integer(revalue(all$PoolQC, Qualities))
table(all$PoolQC)
all$PoolQC <- addNA(all$PoolQC)
levels(all$PoolQC) <- c(levels(all$PoolQC), 'None')
levels(all$PoolQC)
levels(all$PoolQC)
levels(all$PoolQC) <- c(levels(all$PoolQC), 'None' = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
levels(all$PoolQC)
all$PoolQC <- addNA(all$PoolQC)
levels(all$PoolQC
levels(all$PoolQC)
levels(all$PoolQC)
levels(all$PoolQC)
all$PoolQC <- addNA(all$PoolQC)
all$PoolQC[is.na(all$PoolQC)] <- 'None'
Qualities <- c('None' = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC<-as.integer(revalue(all$PoolQC, Qualities))
table(all$PoolQC)
all$PoolQC[is.na(all$PoolQC)] <- 'None'
Qualities <- c('None' = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC<-as.integer(revalue(all$PoolQC, Qualities))
table(all$PoolQC)
all$MiscFeature <- addNA(all$MiscFeature)
all$MiscFeature[is.na(all$MiscFeature)] <- 'No Feature'
all$MiscFeature <- addNA(all$MiscFeature)
all$MiscFeature[is.na(all$MiscFeature)] <- 'No Feature'
all$MiscFeature[is.na(all$MiscFeature)] <- 'None'
table(all$MiscFeature)
all$MiscFeature <- addNA(all$MiscFeature)
all$MiscFeature[is.na(all$MiscFeature)] <- 'None'
all$MiscFeature[is.na(all$MiscFeature)] <- 'None'
table(all$MiscFeature)
train <- read.csv('/Users/lizhizicui/Desktop/Final-Project---Applied-Data-Science/Data/Raw/train.csv')
test <- read.csv('/Users/lizhizicui/Desktop/Final-Project---Applied-Data-Science/Data/Raw/test.csv')
test$SalePrice <- NA
all <- rbind(train,test,stringsAsFactors = FALSE)
all$PoolQC <- addNA(all$PoolQC)
all$PoolQC[is.na(all$PoolQC)] <- 'None'
Qualities <- c('None' = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC<-as.integer(revalue(all$PoolQC, Qualities))
table(all$PoolQC)
all$PoolQC <- addNA(all$PoolQC)
all$PoolQC[is.na(all$PoolQC)] <- 'None'
Qualities <- c('None' = 0, 'Po' = 1, 'Fa' = 2, 'TA' = 3, 'Gd' = 4, 'Ex' = 5)
all$PoolQC<-as.integer(revalue(all$PoolQC, Qualities))
table(all$PoolQC)
all$MiscFeature[is.na(all$MiscFeature)] <- 'None'
table(all$MiscFeature)
all$Alley[is.na(all$Alley)] <- 'No Alley'
all$Alley <- as.factor(all$Alley)
table(all$Alley)
all$Fence[is.na(all$Fence)] <- 'No Fence'
table(all$Fence)
all$FireplaceQu[is.na(all$FireplaceQu)] <- 'No Fireplace'
all$FireplaceQu<-as.integer(revalue(all$FireplaceQu, Qualities))
table(all$FireplaceQu)
#GarageYrBlt/GarageFinish/GarageCars/GarageArea/GarageQual/GarageCond
all$GarageType[is.na(all$GarageType)] <- 'No Garage'
all$GarageType <- as.factor(all$GarageType)
table(all$GarageType)
all$GarageYrBlt[is.na(all$GarageYrBlt)] <- 'No Garage'
all$GarageYrBlt <- as.factor(all$GarageYrBlt)
table(all$GarageYrBlt)
all$GarageFinish[is.na(all$GarageFinish)] <- 'No Garage'
all$GarageFinish <- as.factor(all$GarageFinish)
table(all$GarageFinish)
all$GarageCars[is.na(all$GarageCars)] <- 'No Garage'
all$GarageCars <- as.factor(all$GarageCars)
table(all$GarageCars)
all$GarageArea[is.na(all$GarageArea)] <- 'No Garage'
all$GarageArea <- as.factor(all$GarageArea)
table(all$GarageArea)
all$GarageQual[is.na(all$GarageQual)] <- 'No Garage'
all$GarageQual <- as.factor(all$GarageQual)
table(all$GarageQual)
all$GarageCond[is.na(all$GarageCond)] <- 'No Garage'
all$GarageCond <- as.factor(all$GarageCond)
table(all$GarageCond)
#BsmtExposure: Refers to walkout or garden level walls (**smae for BsmtFinType1/BsmtFinSF1/BsmtFinType2/BsmtFinSF2/BsmtUnfSF/BsmtQual)
all$BsmtQual[is.na(all$BsmtQual)] <- 'No Basement'
all$BsmtQual<-as.integer(revalue(all$BsmtQual, Qualities))
table(all$BsmtQual)
all$BsmtExposure[is.na(all$BsmtExposure)] <- 'No Basement'
all$BsmtExposure<-as.integer(revalue(all$BsmtExposure, Qualities))
table(all$BsmtExposure)
all$BsmtFinType1[is.na(all$BsmtFinType1)] <- 'No Basement'
all$BsmtFinType1<-as.integer(revalue(all$BsmtFinType1, Qualities))
table(all$BsmtFinType1)
all$BsmtFinType2[is.na(all$BsmtFinType2)] <- 'No Basement'
all$BsmtFinType2<-as.integer(revalue(all$BsmtFinType2, Qualities))
table(all$BsmtFinType2)
all$BsmtUnfSF[is.na(all$BsmtUnfSF)] <- 'No Basement'
all$BsmtUnfSF<-as.integer(revalue(all$BsmtUnfSF, Qualities))
table(all$BsmtUnfSF)
all$BsmtFinSF1[is.na(all$BsmtFinSF1)] <- 'No Basement'
all$BsmtFinSF1<-as.integer(revalue(all$BsmtFinSF1, Qualities))
table(all$BsmtFinSF1)
all$BsmtFinSF2[is.na(all$BsmtFinSF2)] <- 'No Basement'
all$BsmtFinSF2<-as.integer(revalue(all$BsmtFinSF2, Qualities))
table(all$BsmtFinSF2)
drop.na.columns <- c( "MasVnrType","LotFrontage")
all.minus.nas <- all[ , !(names(all) %in% drop.na.columns)]
numericVars <- which(sapply(all.minus.nas, is.numeric))
factorVars <- which(sapply(all.minus.nas, is.factor))
all_numVar <- all.minus.nas[, numericVars]
cor_numVar <- cor(all_numVar, use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(cor_numVar[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.5)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt", tl.cex = 0.7,cl.cex = .7, number.cex=.7)
